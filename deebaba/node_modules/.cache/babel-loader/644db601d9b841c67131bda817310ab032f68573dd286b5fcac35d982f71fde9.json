{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { addComment, addLike, addPost, deleteComment, deletePost, getPost, getPosts, removeLike } from \"../thunks/post\";\nconst postSlice = createSlice({\n  name: \"post\",\n  initialState: {\n    posts: [],\n    post: null,\n    loading: true,\n    error: {}\n  },\n  reducers: {\n    postError: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    }\n  },\n  extraReducers(builder) {\n    builder.addCase(getPosts.fulfilled, (state, action) => {\n      state.posts = action.payload;\n      state.loading = false;\n    });\n    builder.addCase(getPost.fulfilled, (state, action) => {\n      state.post = action.payload;\n      state.loading = false;\n    });\n    builder.addCase(addPost.fulfilled, (state, action) => {\n      state.posts = [action.payload, ...state.posts];\n      state.loading = false;\n    });\n    builder.addCase(addComment.fulfilled, (state, action) => {\n      state.post = {\n        ...state.post,\n        comment: action.payload\n      };\n      state.loading = false;\n    });\n    builder.addCase(addLike.fulfilled, (state, action) => {\n      state.posts = state.posts.map(post => post._id === (action.payload ? action.payload.id : \"\") ? {\n        ...post,\n        likes: action.payload.likes\n      } : post);\n      state.loading = false;\n    });\n    builder.addCase(removeLike.fulfilled, (state, action) => {\n      state.posts = state.posts.map(post => post._id === (action.payload ? action.payload.id : \"\") ? {\n        ...post,\n        likes: action.payload.likes\n      } : post);\n      state.loading = false;\n    });\n    builder.addCase(deletePost.fulfilled, (state, action) => {\n      state.posts = state.posts.filter(post => post._id !== action.payload);\n      state.loading = false;\n    });\n    builder.addCase(deleteComment.fulfilled, (state, action) => {\n      state.post = {\n        ...state.post,\n        comments: state.post.comments.filter(comment => comment._id !== action.payload)\n      };\n      state.loading = false;\n    });\n  }\n});\nexport const postReducer = postSlice.reducer;\nexport const {\n  postError\n} = postSlice.actions;","map":{"version":3,"names":["createSlice","addComment","addLike","addPost","deleteComment","deletePost","getPost","getPosts","removeLike","postSlice","name","initialState","posts","post","loading","error","reducers","postError","state","action","payload","extraReducers","builder","addCase","fulfilled","comment","map","_id","id","likes","filter","comments","postReducer","reducer","actions"],"sources":["C:/DeeBaba/deebaba/src/store/slice/postSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addComment,\r\n  addLike,\r\n  addPost,\r\n  deleteComment,\r\n  deletePost,\r\n  getPost,\r\n  getPosts,\r\n  removeLike,\r\n} from \"../thunks/post\";\r\n\r\nconst postSlice = createSlice({\r\n  name: \"post\",\r\n  initialState: {\r\n    posts: [],\r\n    post: null,\r\n    loading: true,\r\n    error: {},\r\n  },\r\n  reducers: {\r\n    postError: (state, action) => {\r\n      state.error = action.payload;\r\n      state.loading = false;\r\n    },\r\n  },\r\n  extraReducers(builder) {\r\n    builder.addCase(getPosts.fulfilled, (state, action) => {\r\n      state.posts = action.payload;\r\n      state.loading = false;\r\n    });\r\n    builder.addCase(getPost.fulfilled, (state, action) => {\r\n      state.post = action.payload;\r\n      state.loading = false;\r\n    });\r\n    builder.addCase(addPost.fulfilled, (state, action) => {\r\n      state.posts = [action.payload, ...state.posts];\r\n      state.loading = false;\r\n    });\r\n    builder.addCase(addComment.fulfilled, (state, action) => {\r\n      state.post = { ...state.post, comment: action.payload };\r\n      state.loading = false;\r\n    });\r\n    builder.addCase(addLike.fulfilled, (state, action) => {\r\n      state.posts = state.posts.map((post) =>\r\n        post._id === (action.payload ? action.payload.id : \"\")\r\n          ? { ...post, likes: action.payload.likes }\r\n          : post\r\n      );\r\n      state.loading = false;\r\n    });\r\n    builder.addCase(removeLike.fulfilled, (state, action) => {\r\n      state.posts = state.posts.map((post) =>\r\n        post._id === (action.payload ? action.payload.id : \"\")\r\n          ? { ...post, likes: action.payload.likes }\r\n          : post\r\n      );\r\n      state.loading = false;\r\n    });\r\n    builder.addCase(deletePost.fulfilled, (state, action) => {\r\n      state.posts = state.posts.filter((post) => post._id !== action.payload);\r\n      state.loading = false;\r\n    });\r\n    builder.addCase(deleteComment.fulfilled, (state, action) => {\r\n      state.post = {\r\n        ...state.post,\r\n        comments: state.post.comments.filter(\r\n          (comment) => comment._id !== action.payload\r\n        ),\r\n      };\r\n      state.loading = false;\r\n    });\r\n  },\r\n});\r\n\r\nexport const postReducer = postSlice.reducer;\r\nexport const { postError } = postSlice.actions;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}