{"ast":null,"code":"import { createAction, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { setAlert } from \"./setAlert\";\nimport setAuthToken from \"../../utils/setAuthToken\";\nimport { authError } from \"../slice/authSlice\";\n// import { removeToken } from \"../slice/authSlice\";\n\n// Load User\nexport const loadUser = createAsyncThunk(\"auth/loadUser\", async (_, thunkAPI) => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n});\n\n// Register User\nexport const register = createAsyncThunk(\"auth/register\", async (res, thunkAPI) => {\n  const {\n    name,\n    email,\n    password\n  } = res;\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n  try {\n    const response = await axios.post(\"/api/users\", body, config);\n    thunkAPI.dispatch(setAlert({\n      msg: \"Logged In\",\n      alertType: \"success\"\n    }));\n    return response.data.token;\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach(error => thunkAPI.dispatch(setAlert({\n        msg: error.msg,\n        alertType: \"danger\"\n      })));\n      // const registerFail = createAction(\"REGISTER_FAIL\");\n      // thunkAPI.dispatch(registerFail(removeToken));\n    }\n  }\n});","map":{"version":3,"names":["createAction","createAsyncThunk","axios","setAlert","setAuthToken","authError","loadUser","_","thunkAPI","localStorage","token","register","res","name","email","password","config","headers","body","JSON","stringify","response","post","dispatch","msg","alertType","data","err","errors","forEach","error"],"sources":["C:/DeeBaba/deebaba/src/store/thunks/registerUser.js"],"sourcesContent":["import { createAction, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { setAlert } from \"./setAlert\";\r\nimport setAuthToken from \"../../utils/setAuthToken\";\r\nimport { authError } from \"../slice/authSlice\";\r\n// import { removeToken } from \"../slice/authSlice\";\r\n\r\n// Load User\r\nexport const loadUser = createAsyncThunk(\r\n  \"auth/loadUser\",\r\n  async (_, thunkAPI) => {\r\n    if (localStorage.token) {\r\n      setAuthToken(localStorage.token);\r\n    }\r\n  }\r\n);\r\n\r\n// Register User\r\nexport const register = createAsyncThunk(\r\n  \"auth/register\",\r\n  async (res, thunkAPI) => {\r\n    const { name, email, password } = res;\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const body = JSON.stringify({ name, email, password });\r\n\r\n    try {\r\n      const response = await axios.post(\"/api/users\", body, config);\r\n      thunkAPI.dispatch(setAlert({ msg: \"Logged In\", alertType: \"success\" }));\r\n      return response.data.token;\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach((error) =>\r\n          thunkAPI.dispatch(setAlert({ msg: error.msg, alertType: \"danger\" }))\r\n        );\r\n        // const registerFail = createAction(\"REGISTER_FAIL\");\r\n        // thunkAPI.dispatch(registerFail(removeToken));\r\n      }\r\n    }\r\n  }\r\n);\r\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,kBAAkB;AACjE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,YAAY;AACrC,OAAOC,YAAY,MAAM,0BAA0B;AACnD,SAASC,SAAS,QAAQ,oBAAoB;AAC9C;;AAEA;AACA,OAAO,MAAMC,QAAQ,GAAGL,gBAAgB,CACtC,eAAe,EACf,OAAOM,CAAC,EAAEC,QAAQ,KAAK;EACrB,IAAIC,YAAY,CAACC,KAAK,EAAE;IACtBN,YAAY,CAACK,YAAY,CAACC,KAAK,CAAC;EAClC;AACF,CACF,CAAC;;AAED;AACA,OAAO,MAAMC,QAAQ,GAAGV,gBAAgB,CACtC,eAAe,EACf,OAAOW,GAAG,EAAEJ,QAAQ,KAAK;EACvB,MAAM;IAAEK,IAAI;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGH,GAAG;EAErC,MAAMI,MAAM,GAAG;IACbC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC;EAED,MAAMC,IAAI,GAAGC,IAAI,CAACC,SAAS,CAAC;IAAEP,IAAI;IAAEC,KAAK;IAAEC;EAAS,CAAC,CAAC;EAEtD,IAAI;IACF,MAAMM,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,YAAY,EAAEJ,IAAI,EAAEF,MAAM,CAAC;IAC7DR,QAAQ,CAACe,QAAQ,CAACpB,QAAQ,CAAC;MAAEqB,GAAG,EAAE,WAAW;MAAEC,SAAS,EAAE;IAAU,CAAC,CAAC,CAAC;IACvE,OAAOJ,QAAQ,CAACK,IAAI,CAAChB,KAAK;EAC5B,CAAC,CAAC,OAAOiB,GAAG,EAAE;IACZ,MAAMC,MAAM,GAAGD,GAAG,CAACN,QAAQ,CAACK,IAAI,CAACE,MAAM;IAEvC,IAAIA,MAAM,EAAE;MACVA,MAAM,CAACC,OAAO,CAAEC,KAAK,IACnBtB,QAAQ,CAACe,QAAQ,CAACpB,QAAQ,CAAC;QAAEqB,GAAG,EAAEM,KAAK,CAACN,GAAG;QAAEC,SAAS,EAAE;MAAS,CAAC,CAAC,CACrE,CAAC;MACD;MACA;IACF;EACF;AACF,CACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}