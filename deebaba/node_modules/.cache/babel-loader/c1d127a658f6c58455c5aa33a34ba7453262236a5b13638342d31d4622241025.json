{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { setAlert } from \"../thunks/setAlert\";\nconst alertSlice = createSlice({\n  name: \"alert\",\n  initialState: [],\n  extraReducers(builder) {\n    builder.addCase(setAlert.fulfilled, (state, action) => {\n      state.data = action.payload;\n    });\n\n    // builder.addCase(removeAlert.fulfilled, (state, action) => {\n    //     state.filter(alert => alert.id !== action.payload)\n    // })\n  }\n});\nexport const alertReducer = alertSlice.reducer;","map":{"version":3,"names":["createSlice","setAlert","alertSlice","name","initialState","extraReducers","builder","addCase","fulfilled","state","action","data","payload","alertReducer","reducer"],"sources":["C:/DeeBaba/deebaba/src/store/slice/alertSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { setAlert } from \"../thunks/setAlert\";\r\n\r\nconst alertSlice = createSlice({\r\n  name: \"alert\",\r\n  initialState: [],\r\n  extraReducers(builder) {\r\n    builder.addCase(setAlert.fulfilled, (state, action) => {\r\n      state.data = action.payload;\r\n    });\r\n\r\n    // builder.addCase(removeAlert.fulfilled, (state, action) => {\r\n    //     state.filter(alert => alert.id !== action.payload)\r\n    // })\r\n  },\r\n});\r\n\r\nexport const alertReducer = alertSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,QAAQ,oBAAoB;AAE7C,MAAMC,UAAU,GAAGF,WAAW,CAAC;EAC7BG,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE,EAAE;EAChBC,aAAaA,CAACC,OAAO,EAAE;IACrBA,OAAO,CAACC,OAAO,CAACN,QAAQ,CAACO,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACrDD,KAAK,CAACE,IAAI,GAAGD,MAAM,CAACE,OAAO;IAC7B,CAAC,CAAC;;IAEF;IACA;IACA;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAGX,UAAU,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}