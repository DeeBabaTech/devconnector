{"ast":null,"code":"import { createAction, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { setAlert } from \"./setAlert\";\nexport const register = createAsyncThunk(\"auth/register\", async (res, thunkAPI) => {\n  const {\n    name,\n    email,\n    password\n  } = res;\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n  try {\n    const response = await axios.post(\"/api/users\", body, config);\n    const res = response.data;\n    console.log(res.token.toString());\n    return res.token;\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach(error => thunkAPI.dispatch(setAlert({\n        msg: error.msg,\n        alertType: \"danger\"\n      })));\n    }\n    const removeToke = createAction('REGISTER_FAIL');\n    removeToke(removeToken);\n  }\n});","map":{"version":3,"names":["createAction","createAsyncThunk","axios","setAlert","register","res","thunkAPI","name","email","password","config","headers","body","JSON","stringify","response","post","data","console","log","token","toString","err","errors","forEach","error","dispatch","msg","alertType","removeToke","removeToken"],"sources":["C:/DeeBaba/deebaba/src/store/thunks/registerUser.js"],"sourcesContent":["import { createAction, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { setAlert } from \"./setAlert\";\r\n\r\nexport const register = createAsyncThunk(\r\n  \"auth/register\",\r\n  async (res, thunkAPI) => {\r\n    const { name, email, password } = res;\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const body = JSON.stringify({ name, email, password });\r\n\r\n    try {\r\n      const response = await axios.post(\"/api/users\", body, config);\r\n      const res = response.data;\r\n      console.log(res.token.toString());\r\n      return res.token;\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach((error) =>\r\n          thunkAPI.dispatch(setAlert({ msg: error.msg, alertType: \"danger\" }))\r\n        );\r\n      }\r\n\r\n      const removeToke = createAction('REGISTER_FAIL')\r\n      removeToke(removeToken)\r\n    }\r\n  }\r\n);\r\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,kBAAkB;AACjE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,YAAY;AAErC,OAAO,MAAMC,QAAQ,GAAGH,gBAAgB,CACtC,eAAe,EACf,OAAOI,GAAG,EAAEC,QAAQ,KAAK;EACvB,MAAM;IAAEC,IAAI;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGJ,GAAG;EAErC,MAAMK,MAAM,GAAG;IACbC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC;EAED,MAAMC,IAAI,GAAGC,IAAI,CAACC,SAAS,CAAC;IAAEP,IAAI;IAAEC,KAAK;IAAEC;EAAS,CAAC,CAAC;EAEtD,IAAI;IACF,MAAMM,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAAC,YAAY,EAAEJ,IAAI,EAAEF,MAAM,CAAC;IAC7D,MAAML,GAAG,GAAGU,QAAQ,CAACE,IAAI;IACzBC,OAAO,CAACC,GAAG,CAACd,GAAG,CAACe,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAC;IACjC,OAAOhB,GAAG,CAACe,KAAK;EAClB,CAAC,CAAC,OAAOE,GAAG,EAAE;IACZ,MAAMC,MAAM,GAAGD,GAAG,CAACP,QAAQ,CAACE,IAAI,CAACM,MAAM;IAEvC,IAAIA,MAAM,EAAE;MACVA,MAAM,CAACC,OAAO,CAAEC,KAAK,IACnBnB,QAAQ,CAACoB,QAAQ,CAACvB,QAAQ,CAAC;QAAEwB,GAAG,EAAEF,KAAK,CAACE,GAAG;QAAEC,SAAS,EAAE;MAAS,CAAC,CAAC,CACrE,CAAC;IACH;IAEA,MAAMC,UAAU,GAAG7B,YAAY,CAAC,eAAe,CAAC;IAChD6B,UAAU,CAACC,WAAW,CAAC;EACzB;AACF,CACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}