{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { setAlert } from \"./setAlert\";\nimport setAuthToken from \"../../utils/setAuthToken\";\nimport { authError, authSuccess } from \"../slice/authSlice\";\n\n// Load User\nexport const loadUser = createAsyncThunk(\"auth/loadUser\", async (_, thunkAPI) => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n  try {\n    const res = await axios.get(\"/api/auth\");\n    thunkAPI.dispatch(authSuccess());\n    return res.data;\n  } catch (err) {\n    thunkAPI.dispatch(authError());\n  }\n});\n\n// Register User\nexport const register = createAsyncThunk(\"auth/register\", async (res, thunkAPI) => {\n  const {\n    name,\n    email,\n    password\n  } = res;\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n  try {\n    const response = await axios.post(\"/api/users\", body, config);\n    thunkAPI.dispatch(setAlert({\n      msg: \"Registered successfully\",\n      alertType: \"success\"\n    }));\n    thunkAPI.dispatch(authSuccess());\n    return response.data.token;\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach(error => thunkAPI.dispatch(setAlert({\n        msg: error.msg,\n        alertType: \"danger\"\n      })));\n      thunkAPI.dispatch(authError);\n    }\n  }\n});\n\n// Login User\nexport const login = createAsyncThunk(\"auth/login\", async (res, thunkAPI) => {\n  const {\n    email,\n    password\n  } = res;\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n  try {\n    const response = await axios.post(\"/api/auth\", body, config);\n    thunkAPI.dispatch(setAlert({\n      msg: \"Logged In\",\n      alertType: \"success\"\n    }));\n    thunkAPI.dispatch(authSuccess());\n    return response.data.token;\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach(error => thunkAPI.dispatch(setAlert({\n        msg: error.msg,\n        alertType: \"danger\"\n      })));\n      thunkAPI.dispatch(authError());\n    }\n  }\n});","map":{"version":3,"names":["createAsyncThunk","axios","setAlert","setAuthToken","authError","authSuccess","loadUser","_","thunkAPI","localStorage","token","res","get","dispatch","data","err","register","name","email","password","config","headers","body","JSON","stringify","response","post","msg","alertType","errors","forEach","error","login"],"sources":["C:/DeeBaba/deebaba/src/store/thunks/auth.js"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { setAlert } from \"./setAlert\";\r\nimport setAuthToken from \"../../utils/setAuthToken\";\r\nimport { authError, authSuccess } from \"../slice/authSlice\";\r\n\r\n// Load User\r\nexport const loadUser = createAsyncThunk(\r\n  \"auth/loadUser\",\r\n  async (_, thunkAPI) => {\r\n    if (localStorage.token) {\r\n      setAuthToken(localStorage.token);\r\n    }\r\n\r\n    try {\r\n      const res = await axios.get(\"/api/auth\");\r\n      thunkAPI.dispatch(authSuccess());\r\n      return res.data;\r\n    } catch (err) {\r\n      thunkAPI.dispatch(authError());\r\n    }\r\n  }\r\n);\r\n\r\n// Register User\r\nexport const register = createAsyncThunk(\r\n  \"auth/register\",\r\n  async (res, thunkAPI) => {\r\n    const { name, email, password } = res;\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const body = JSON.stringify({ name, email, password });\r\n\r\n    try {\r\n      const response = await axios.post(\"/api/users\", body, config);\r\n      thunkAPI.dispatch(\r\n        setAlert({ msg: \"Registered successfully\", alertType: \"success\" })\r\n      );\r\n      thunkAPI.dispatch(authSuccess())\r\n      return response.data.token;\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach((error) =>\r\n          thunkAPI.dispatch(setAlert({ msg: error.msg, alertType: \"danger\" }))\r\n        );\r\n        thunkAPI.dispatch(authError)\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\n// Login User\r\nexport const login = createAsyncThunk(\"auth/login\", async (res, thunkAPI) => {\r\n  const { email, password } = res;\r\n\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const response = await axios.post(\"/api/auth\", body, config);\r\n    thunkAPI.dispatch(setAlert({ msg: \"Logged In\", alertType: \"success\" }));\r\n    thunkAPI.dispatch(authSuccess());\r\n    return response.data.token;\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) =>\r\n        thunkAPI.dispatch(setAlert({ msg: error.msg, alertType: \"danger\" }))\r\n      );\r\n      thunkAPI.dispatch(authError());\r\n    }\r\n  }\r\n});\r\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,YAAY;AACrC,OAAOC,YAAY,MAAM,0BAA0B;AACnD,SAASC,SAAS,EAAEC,WAAW,QAAQ,oBAAoB;;AAE3D;AACA,OAAO,MAAMC,QAAQ,GAAGN,gBAAgB,CACtC,eAAe,EACf,OAAOO,CAAC,EAAEC,QAAQ,KAAK;EACrB,IAAIC,YAAY,CAACC,KAAK,EAAE;IACtBP,YAAY,CAACM,YAAY,CAACC,KAAK,CAAC;EAClC;EAEA,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,WAAW,CAAC;IACxCJ,QAAQ,CAACK,QAAQ,CAACR,WAAW,CAAC,CAAC,CAAC;IAChC,OAAOM,GAAG,CAACG,IAAI;EACjB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZP,QAAQ,CAACK,QAAQ,CAACT,SAAS,CAAC,CAAC,CAAC;EAChC;AACF,CACF,CAAC;;AAED;AACA,OAAO,MAAMY,QAAQ,GAAGhB,gBAAgB,CACtC,eAAe,EACf,OAAOW,GAAG,EAAEH,QAAQ,KAAK;EACvB,MAAM;IAAES,IAAI;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGR,GAAG;EAErC,MAAMS,MAAM,GAAG;IACbC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC;EAED,MAAMC,IAAI,GAAGC,IAAI,CAACC,SAAS,CAAC;IAAEP,IAAI;IAAEC,KAAK;IAAEC;EAAS,CAAC,CAAC;EAEtD,IAAI;IACF,MAAMM,QAAQ,GAAG,MAAMxB,KAAK,CAACyB,IAAI,CAAC,YAAY,EAAEJ,IAAI,EAAEF,MAAM,CAAC;IAC7DZ,QAAQ,CAACK,QAAQ,CACfX,QAAQ,CAAC;MAAEyB,GAAG,EAAE,yBAAyB;MAAEC,SAAS,EAAE;IAAU,CAAC,CACnE,CAAC;IACDpB,QAAQ,CAACK,QAAQ,CAACR,WAAW,CAAC,CAAC,CAAC;IAChC,OAAOoB,QAAQ,CAACX,IAAI,CAACJ,KAAK;EAC5B,CAAC,CAAC,OAAOK,GAAG,EAAE;IACZ,MAAMc,MAAM,GAAGd,GAAG,CAACU,QAAQ,CAACX,IAAI,CAACe,MAAM;IAEvC,IAAIA,MAAM,EAAE;MACVA,MAAM,CAACC,OAAO,CAAEC,KAAK,IACnBvB,QAAQ,CAACK,QAAQ,CAACX,QAAQ,CAAC;QAAEyB,GAAG,EAAEI,KAAK,CAACJ,GAAG;QAAEC,SAAS,EAAE;MAAS,CAAC,CAAC,CACrE,CAAC;MACDpB,QAAQ,CAACK,QAAQ,CAACT,SAAS,CAAC;IAC9B;EACF;AACF,CACF,CAAC;;AAED;AACA,OAAO,MAAM4B,KAAK,GAAGhC,gBAAgB,CAAC,YAAY,EAAE,OAAOW,GAAG,EAAEH,QAAQ,KAAK;EAC3E,MAAM;IAAEU,KAAK;IAAEC;EAAS,CAAC,GAAGR,GAAG;EAE/B,MAAMS,MAAM,GAAG;IACbC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC;EAED,MAAMC,IAAI,GAAGC,IAAI,CAACC,SAAS,CAAC;IAAEN,KAAK;IAAEC;EAAS,CAAC,CAAC;EAEhD,IAAI;IACF,MAAMM,QAAQ,GAAG,MAAMxB,KAAK,CAACyB,IAAI,CAAC,WAAW,EAAEJ,IAAI,EAAEF,MAAM,CAAC;IAC5DZ,QAAQ,CAACK,QAAQ,CAACX,QAAQ,CAAC;MAAEyB,GAAG,EAAE,WAAW;MAAEC,SAAS,EAAE;IAAU,CAAC,CAAC,CAAC;IACvEpB,QAAQ,CAACK,QAAQ,CAACR,WAAW,CAAC,CAAC,CAAC;IAChC,OAAOoB,QAAQ,CAACX,IAAI,CAACJ,KAAK;EAC5B,CAAC,CAAC,OAAOK,GAAG,EAAE;IACZ,MAAMc,MAAM,GAAGd,GAAG,CAACU,QAAQ,CAACX,IAAI,CAACe,MAAM;IAEvC,IAAIA,MAAM,EAAE;MACVA,MAAM,CAACC,OAAO,CAAEC,KAAK,IACnBvB,QAAQ,CAACK,QAAQ,CAACX,QAAQ,CAAC;QAAEyB,GAAG,EAAEI,KAAK,CAACJ,GAAG;QAAEC,SAAS,EAAE;MAAS,CAAC,CAAC,CACrE,CAAC;MACDpB,QAAQ,CAACK,QAAQ,CAACT,SAAS,CAAC,CAAC,CAAC;IAChC;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}