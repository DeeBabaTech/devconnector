{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { loadUser, register } from \"../thunks/auth\";\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    token: localStorage.getItem(\"token\"),\n    isAuthenticated: null,\n    loading: true,\n    user: null\n  },\n  reducers: {\n    authError: state => {\n      state.isAuthenticated = false;\n    },\n    authSuccess: state => {\n      state.isAuthenticated = true;\n    }\n  },\n  extraReducers(builder) {\n    builder.addCase(register.fulfilled, (state, action) => {\n      localStorage.setItem(\"token\", action.payload);\n      state.isAuthenticated = true;\n      state.loading = false;\n    });\n    builder.addCase(loadUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload;\n    });\n  }\n});\nexport const authReducer = authSlice.reducer;\nexport const {\n  authError,\n  authSuccess\n} = authSlice.actions;","map":{"version":3,"names":["createSlice","loadUser","register","authSlice","name","initialState","token","localStorage","getItem","isAuthenticated","loading","user","reducers","authError","state","authSuccess","extraReducers","builder","addCase","fulfilled","action","setItem","payload","authReducer","reducer","actions"],"sources":["C:/DeeBaba/deebaba/src/store/slice/authSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { loadUser, register } from \"../thunks/auth\";\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState: {\r\n    token: localStorage.getItem(\"token\"),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null,\r\n  },\r\n  reducers: {\r\n    authError: (state) => {\r\n      state.isAuthenticated = false;\r\n    },\r\n    authSuccess: (state) => {\r\n      state.isAuthenticated = true;\r\n    },\r\n  },\r\n\r\n  extraReducers(builder) {\r\n    builder.addCase(register.fulfilled, (state, action) => {\r\n      localStorage.setItem(\"token\", action.payload);\r\n      state.isAuthenticated = true;\r\n      state.loading = false;\r\n    });\r\n\r\n    builder.addCase(loadUser.fulfilled, (state, action) => {\r\n      state.loading = false;\r\n      state.user = action.payload;\r\n    });\r\n  },\r\n});\r\n\r\nexport const authReducer = authSlice.reducer;\r\nexport const { authError, authSuccess } = authSlice.actions;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,EAAEC,QAAQ,QAAQ,gBAAgB;AAEnD,MAAMC,SAAS,GAAGH,WAAW,CAAC;EAC5BI,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACpCC,eAAe,EAAE,IAAI;IACrBC,OAAO,EAAE,IAAI;IACbC,IAAI,EAAE;EACR,CAAC;EACDC,QAAQ,EAAE;IACRC,SAAS,EAAGC,KAAK,IAAK;MACpBA,KAAK,CAACL,eAAe,GAAG,KAAK;IAC/B,CAAC;IACDM,WAAW,EAAGD,KAAK,IAAK;MACtBA,KAAK,CAACL,eAAe,GAAG,IAAI;IAC9B;EACF,CAAC;EAEDO,aAAaA,CAACC,OAAO,EAAE;IACrBA,OAAO,CAACC,OAAO,CAAChB,QAAQ,CAACiB,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MACrDb,YAAY,CAACc,OAAO,CAAC,OAAO,EAAED,MAAM,CAACE,OAAO,CAAC;MAC7CR,KAAK,CAACL,eAAe,GAAG,IAAI;MAC5BK,KAAK,CAACJ,OAAO,GAAG,KAAK;IACvB,CAAC,CAAC;IAEFO,OAAO,CAACC,OAAO,CAACjB,QAAQ,CAACkB,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MACrDN,KAAK,CAACJ,OAAO,GAAG,KAAK;MACrBI,KAAK,CAACH,IAAI,GAAGS,MAAM,CAACE,OAAO;IAC7B,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,WAAW,GAAGpB,SAAS,CAACqB,OAAO;AAC5C,OAAO,MAAM;EAAEX,SAAS;EAAEE;AAAY,CAAC,GAAGZ,SAAS,CAACsB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}